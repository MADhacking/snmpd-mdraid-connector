#!/bin/bash

function versioninfo
{
    echo "${CMDNAME}"
    echo "Version 1.0.0"

    echo -e "\nCopyright (C) 2010-2019 Hacking Networked Solutions"
    echo "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."
    echo "This is free software: you are free to change and redistribute it."
    echo "There is NO WARRANTY, to the extent permitted by law."
}

function helpscreen
{
	echo "Usage: ${CMDNAME} [OPTION]..."
	echo "Maintains SNMPD cache files of MD RAID details for configured devices."
	echo
	echo "      --help                     display this help and exit"
    echo "      --version                  output version information and exit"
}

function die
{
    echo "${1}" >&2
    exit 1
}

# Init local vars
CMDNAME=$(basename "${0}")
CONFIG="${CONFIG:-/etc/snmpd-mdraid-connector}"
MDADMCMD="${MDADMCMD:-$(command -v mdadm)}"
DEVICES=""

# Read the config file if we can
# shellcheck disable=SC1090
source "${CONFIG}" 2>/dev/null || die "Unable to read configuration file [${CONFIG}]"

# Process command line switches
while (( $# > 0 ))
do
	case $1 in
		--version)
			versioninfo
			exit
		;;	
		*)
			helpscreen
			shift 1
			exit
		;;
	esac
done

# If we couldn't open the config file then complain and exit.
[[ ! -r $CONFIG ]] && die "Unable to open configuration file [$CONFIG]"

# Check for sensible configuration values.
[[ -z ${DEVICES} ]] && die "No DEVICES defined in ${CONFIG}"
[[ -z ${CACHEDIR} ]] && die "No CACHEDIR defined in ${CONFIG}"
[[ -z ${MDADMCMD} ]] && die "Unable to locate mdadm (and MDADMCMD not defined in ${CONFIG})"

# Check that the cache directory exists and is writable
if [[ ! -d "${CACHEDIR}" ]]; then
	mkdir -p "${CACHEDIR}" || die "Cache directory [$CACHEDIR] does not exist and could not be created"
fi
[[ ! -w "${CACHEDIR}" ]] && die "Cache directory [${CACHEDIR}] is not writable"

# Check that the devices list exists...
if [[ -f "${CACHEDIR}"/devices ]]; then
	# Compare the stored list of devices to the current list.
	[[ "$(cat "${CACHEDIR}"/devices)" = "${DEVICES[*]}" ]] || INFO_REBUILD="YES"
else
	INFO_REBUILD="YES"
fi

# If the INFO_REBUILD flag is set then completely clean the cache.
if [[ -n "${INFO_REBUILD}" ]]; then
	echo -n "Cleaning cache files..."
	rm "${CACHEDIR}"/* &> /dev/null 
	echo "done."
	echo -n "Storing device list..."
	echo "${DEVICES[@]}" > "${CACHEDIR}"/devices
	echo "done."
fi

# Rebuild the cache for all devices.
echo -n "Rebuilding cache files..."
for DEVICE in "${DEVICES[@]}"; do
	DEVFNAME=${DEVICE##\/}	 
	DEVFNAME=${CACHEDIR}/${DEVFNAME//\//_}_mdinfo
	TDEVFNAME=${DEVFNAME}.tmp

	${MDADMCMD} --detail "${DEVICE}" > "${TDEVFNAME}"
	mv "${TDEVFNAME}" "${DEVFNAME}"
done
echo "done."

# If the INFO_REBUILD flag is set kill any connector processes.
if [[ -n "${INFO_REBUILD}" ]]; then
	echo -n "Killing any running connectors..."
	killall snmpd-mdraid-connector
	echo "done."
fi
